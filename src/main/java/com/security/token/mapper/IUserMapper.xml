<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.security.token.mapper.IUserMapper">
    <resultMap id="BaseResultMap" type="com.security.token.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="full_name" jdbcType="VARCHAR" property="fullName"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="authorities" jdbcType="VARCHAR" property="authorities"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDeleted"/>
    </resultMap>

    <sql id="Base_Column_List">
        `id`, `user_name`, `password`, `full_name`, `mobile`, `authorities`, `create_user_id`, `create_time`,
        `update_user_id`, `update_time`, `is_deleted`
    </sql>

    <!--通过主键查询-->
    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--通过用户名和密码获取用户-->
    <select id="getUserByNameAndPwd" resultType="com.security.token.entity.User">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_name = #{userName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
    </select>

    <!--删除-->
    <delete id="deleteById" parameterType="java.lang.Long">
        delete from user
        where `id` = #{id,jdbcType=BIGINT}
    </delete>

    <!--插入-->
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.security.token.entity.User"
            useGeneratedKeys="true">
        insert into user (`user_name`, `password`, `full_name`,
          `mobile`, `authorities`, `create_user_id`,
          `create_time`, `update_user_id`, `update_time`,
          `is_deleted`)
        values (#{user_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{full_name,jdbcType=VARCHAR},
          #{mobile,jdbcType=VARCHAR}, #{authorities,jdbcType=VARCHAR}, #{create_user_id,jdbcType=BIGINT},
          #{create_time,jdbcType=TIMESTAMP}, #{update_user_id,jdbcType=BIGINT}, #{update_time,jdbcType=TIMESTAMP},
          #{is_deleted,jdbcType=INTEGER})
    </insert>

    <!--修改-->
    <update id="updateById" parameterType="com.security.token.entity.User">
        update user
            set user_name = #{user_name,jdbcType=VARCHAR},
              password = #{password,jdbcType=VARCHAR},
              full_name = #{full_name,jdbcType=VARCHAR},
              mobile = #{mobile,jdbcType=VARCHAR},
              authorities = #{authorities,jdbcType=VARCHAR},
              create_user_id = #{create_user_id,jdbcType=BIGINT},
              create_time = #{create_time,jdbcType=TIMESTAMP},
              update_user_id = #{update_user_id,jdbcType=BIGINT},
              update_time = #{update_time,jdbcType=TIMESTAMP},
              is_delete = #{is_delete,jdbcType=INTEGER}
            where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>